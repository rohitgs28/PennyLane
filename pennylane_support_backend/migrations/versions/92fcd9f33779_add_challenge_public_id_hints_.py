"""Add challenge public_id, hints, objectives, tags; support conversations & posts

Revision ID: 92fcd9f33779
Revises: ce6847934b79
Create Date: 2025-07-31 16:19:46.597080

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '92fcd9f33779'
down_revision = 'ce6847934b79'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('tags', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_tags_name'), ['name'], unique=True)

    op.create_table('challenge_hints',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('challenge_id', sa.Integer(), nullable=True),
    sa.Column('text', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['challenge_id'], ['challenges.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('challenge_hints', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_challenge_hints_challenge_id'), ['challenge_id'], unique=False)

    op.create_table('challenge_tags',
    sa.Column('challenge_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['challenge_id'], ['challenges.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('challenge_id', 'tag_id')
    )
    op.create_table('learning_objectives',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('challenge_id', sa.Integer(), nullable=True),
    sa.Column('text', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['challenge_id'], ['challenges.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('learning_objectives', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_learning_objectives_challenge_id'), ['challenge_id'], unique=False)

    with op.batch_alter_table('challenges', schema=None) as batch_op:
        batch_op.add_column(sa.Column('public_id', sa.String(length=32), nullable=False))
        batch_op.add_column(sa.Column('description', sa.Text(), nullable=True))
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
        batch_op.create_index(batch_op.f('ix_challenges_category'), ['category'], unique=False)
        batch_op.create_index(batch_op.f('ix_challenges_difficulty'), ['difficulty'], unique=False)
        batch_op.create_index(batch_op.f('ix_challenges_public_id'), ['public_id'], unique=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('challenges', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_challenges_public_id'))
        batch_op.drop_index(batch_op.f('ix_challenges_difficulty'))
        batch_op.drop_index(batch_op.f('ix_challenges_category'))
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
        batch_op.drop_column('description')
        batch_op.drop_column('public_id')

    with op.batch_alter_table('learning_objectives', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_learning_objectives_challenge_id'))

    op.drop_table('learning_objectives')
    op.drop_table('challenge_tags')
    with op.batch_alter_table('challenge_hints', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_challenge_hints_challenge_id'))

    op.drop_table('challenge_hints')
    with op.batch_alter_table('tags', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_tags_name'))

    op.drop_table('tags')
    # ### end Alembic commands ###
